!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
KERNELDIR	Makefile	/^KERNELDIR=$(shell ls -d ~\/linux-2.6.[0-9]*)$/;"	m
MYDEV_MAX_NDEV	mymod.c	8;"	d	file:
MYDEV_RING_SIZE	mymod.c	16;"	d	file:
MYDEV_RING_SIZE	mymod_kmalloc.c	14;"	d	file:
MYDEV_RING_SIZE	mymod_krealloc.c	14;"	d	file:
OutRingBuffer	ringbuffer.h	/^struct OutRingBuffer$/;"	s
PWD	Makefile	/^PWD := $(shell pwd)$/;"	m
TARGETDIR	Makefile	/^TARGETDIR=\/targetfs$/;"	m
__RINGBUFFER_H__	ringbuffer.h	24;"	d
buffer	ringbuffer.h	/^    char *buffer;$/;"	m	struct:OutRingBuffer
data_size	ringbuffer.h	/^    int data_size;$/;"	m	struct:OutRingBuffer
major	mymod.c	/^static unsigned major = 0;				\/* save major number assigned to driver *\/$/;"	v	file:
major	mymod_kmalloc.c	/^static unsigned major = 0;				\/* save major number assigned to driver *\/$/;"	v	file:
major	mymod_krealloc.c	/^static unsigned major = 0;				\/* save major number assigned to driver *\/$/;"	v	file:
mydev	mymod.c	/^static struct cdev mydev;				\/* to be registered with kernel *\/$/;"	v	typeref:struct:cdev	file:
mydev	mymod_kmalloc.c	/^static struct cdev mydev;				\/* to be registered with kernel *\/$/;"	v	typeref:struct:cdev	file:
mydev	mymod_krealloc.c	/^static struct cdev mydev;				\/* to be registered with kernel *\/$/;"	v	typeref:struct:cdev	file:
mydev-objs	Makefile	/^mydev-objs := mymod.o ringbuffer.o$/;"	m
mydev_class	mymod.c	/^static struct class *mydev_class = NULL;		\/* device class to register with sysfs *\/$/;"	v	typeref:struct:class	file:
mydev_class	mymod_kmalloc.c	/^static struct class *mydev_class = NULL;		\/* device class to register with sysfs *\/$/;"	v	typeref:struct:class	file:
mydev_class	mymod_krealloc.c	/^static struct class *mydev_class = NULL;		\/* device class to register with sysfs *\/$/;"	v	typeref:struct:class	file:
mydev_device	mymod.c	/^static struct device *mydev_device[MYDEV_MAX_NDEV];	\/* devices registered with sysfs *\/$/;"	v	typeref:struct:device	file:
mydev_device	mymod_kmalloc.c	/^static struct device **mydev_device;			\/* devices registered with sysfs *\/$/;"	v	typeref:struct:device	file:
mydev_device	mymod_krealloc.c	/^static struct device **mydev_device;			\/* devices registered with sysfs *\/$/;"	v	typeref:struct:device	file:
mydev_fops	mymod.c	/^static const struct file_operations mydev_fops = {$/;"	v	typeref:struct:file_operations	file:
mydev_fops	mymod_kmalloc.c	/^static const struct file_operations mydev_fops = {$/;"	v	typeref:struct:file_operations	file:
mydev_fops	mymod_krealloc.c	/^static const struct file_operations mydev_fops = {$/;"	v	typeref:struct:file_operations	file:
mydev_read	mymod.c	/^mydev_read(struct file *filp, char __user *buf, size_t nbuf, loff_t *offs)$/;"	f	file:
mydev_read	mymod_kmalloc.c	/^mydev_read(struct file *filp, char __user *buf, size_t nbuf, loff_t *offs)$/;"	f	file:
mydev_read	mymod_krealloc.c	/^mydev_read(struct file *filp, char __user *buf, size_t nbuf, loff_t *offs)$/;"	f	file:
mydev_ring	mymod.c	/^static struct OutRingBuffer *mydev_ring[MYDEV_MAX_NDEV];	\/* ring buffer handles *\/$/;"	v	typeref:struct:OutRingBuffer	file:
mydev_ring	mymod_kmalloc.c	/^static struct OutRingBuffer **mydev_ring;			\/* ring buffer handles *\/$/;"	v	typeref:struct:OutRingBuffer	file:
mydev_ring	mymod_krealloc.c	/^static struct OutRingBuffer **mydev_ring;		\/* ring buffer handles *\/$/;"	v	typeref:struct:OutRingBuffer	file:
mydev_write	mymod.c	/^mydev_write(struct file *filp, const char __user *buf, size_t nbuf, loff_t *offs)$/;"	f	file:
mydev_write	mymod_kmalloc.c	/^mydev_write(struct file *filp, const char __user *buf, size_t nbuf, loff_t *offs)$/;"	f	file:
mydev_write	mymod_krealloc.c	/^mydev_write(struct file *filp, const char __user *buf, size_t nbuf, loff_t *offs)$/;"	f	file:
mymod_exit	mymod.c	/^module_exit(mymod_exit);$/;"	v
mymod_exit	mymod.c	/^mymod_exit(void) $/;"	f	file:
mymod_exit	mymod_kmalloc.c	/^module_exit(mymod_exit);$/;"	v
mymod_exit	mymod_kmalloc.c	/^mymod_exit(void) $/;"	f	file:
mymod_exit	mymod_krealloc.c	/^module_exit(mymod_exit);$/;"	v
mymod_exit	mymod_krealloc.c	/^mymod_exit(void) $/;"	f	file:
mymod_init	mymod.c	/^module_init(mymod_init);$/;"	v
mymod_init	mymod.c	/^mymod_init (void)$/;"	f	file:
mymod_init	mymod_kmalloc.c	/^module_init(mymod_init);$/;"	v
mymod_init	mymod_kmalloc.c	/^mymod_init (void)$/;"	f	file:
mymod_init	mymod_krealloc.c	/^module_init(mymod_init);$/;"	v
mymod_init	mymod_krealloc.c	/^mymod_init (void)$/;"	f	file:
ndev	mymod.c	/^static unsigned ndev = 1;				\/* number of devices to create *\/$/;"	v	file:
ndev	mymod_kmalloc.c	/^static unsigned ndev = 1;				\/* number of devices to create *\/$/;"	v	file:
ndev	mymod_krealloc.c	/^static unsigned ndev = 1;				\/* number of devices to create *\/$/;"	v	file:
obj-m	Makefile	/^obj-m := mydev.o$/;"	m
rb_clear	ringbuffer.c	/^rb_clear (struct OutRingBuffer *rb)$/;"	f
rb_clear	ringbuffer_gfp.c	/^rb_clear (struct OutRingBuffer *rb)$/;"	f
rb_data_size	ringbuffer.c	/^rb_data_size (struct OutRingBuffer *rb)$/;"	f
rb_data_size	ringbuffer_gfp.c	/^rb_data_size (struct OutRingBuffer *rb)$/;"	f
rb_destroy	ringbuffer.c	/^rb_destroy (struct OutRingBuffer *rb)$/;"	f
rb_destroy	ringbuffer_gfp.c	/^rb_destroy (struct OutRingBuffer *rb)$/;"	f
rb_free	ringbuffer.c	/^rb_free (struct OutRingBuffer *rb)$/;"	f
rb_free	ringbuffer_gfp.c	/^rb_free (struct OutRingBuffer *rb)$/;"	f
rb_init	ringbuffer.c	/^rb_init (struct OutRingBuffer **rb, int size)$/;"	f
rb_init	ringbuffer_gfp.c	/^rb_init (struct OutRingBuffer **rb, int size)$/;"	f
rb_read	ringbuffer.c	/^rb_read (struct OutRingBuffer *rb, unsigned char * buf, int max)$/;"	f
rb_read	ringbuffer_gfp.c	/^rb_read (struct OutRingBuffer *rb, unsigned char * buf, int max)$/;"	f
rb_write	ringbuffer.c	/^rb_write (struct OutRingBuffer *rb, unsigned char * buf, int len)$/;"	f
rb_write	ringbuffer_gfp.c	/^rb_write (struct OutRingBuffer *rb, unsigned char * buf, int len)$/;"	f
rbuf	mymod.c	/^static char rbuf[MYDEV_RING_SIZE], wbuf[MYDEV_RING_SIZE];	\/* temporary buffers for moving data$/;"	v	file:
rbuf	mymod_kmalloc.c	/^static char rbuf[MYDEV_RING_SIZE], wbuf[MYDEV_RING_SIZE];	\/* temporary buffers for moving data$/;"	v	file:
rbuf	mymod_krealloc.c	/^static char *rbuf = NULL, *wbuf = NULL;			\/* temporary buffers for moving data$/;"	v	file:
rbuf_size	mymod_krealloc.c	/^static unsigned rbuf_size = 0, wbuf_size = 0;		\/* temporary buffer sizes *\/$/;"	v	file:
rd_pointer	ringbuffer.h	/^    int rd_pointer;$/;"	m	struct:OutRingBuffer
size	ringbuffer.h	/^    int size;$/;"	m	struct:OutRingBuffer
wbuf	mymod.c	/^static char rbuf[MYDEV_RING_SIZE], wbuf[MYDEV_RING_SIZE];	\/* temporary buffers for moving data$/;"	v	file:
wbuf	mymod_kmalloc.c	/^static char rbuf[MYDEV_RING_SIZE], wbuf[MYDEV_RING_SIZE];	\/* temporary buffers for moving data$/;"	v	file:
wbuf	mymod_krealloc.c	/^static char *rbuf = NULL, *wbuf = NULL;			\/* temporary buffers for moving data$/;"	v	file:
wbuf_size	mymod_krealloc.c	/^static unsigned rbuf_size = 0, wbuf_size = 0;		\/* temporary buffer sizes *\/$/;"	v	file:
wr_pointer	ringbuffer.h	/^    int wr_pointer;$/;"	m	struct:OutRingBuffer
